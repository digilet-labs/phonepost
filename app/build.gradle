apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

def props = new Properties()
/*
file("phonepost.properties").withInputStream {
    stream -> props.load(stream)
}
*/

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "app.phonepost"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 81
        versionName "20.10.07"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        resConfigs "en", "hi", "ar", "kn", "te", "tn", "ur"

    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
        }

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    androidExtensions {
        experimental = true
    }

    flavorDimensions "api"
    productFlavors {
        /*production {
            dimension "api"
            buildConfigField('String', 'BASE_URL', '"produrl"')
            buildConfigField('String', 'API_BASE_URL', '"produrl"')
            manifestPlaceholders = [
                    BRANCH_TEST_MODE  : false,
                    TRUECALLER_APP_KEY: ''
            ]
        }

        staging {
            dimension "api"
            buildConfigField('String', 'BASE_URL', '"stageurl"')
            buildConfigField('String', 'API_BASE_URL', '"stageurl"')
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            manifestPlaceholders = [
                    BRANCH_TEST_MODE  : true,
                    TRUECALLER_APP_KEY: ''
            ]
        }*/
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://sdk.uxcam.com/android/'
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/INDEX.LIST'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    kapt "com.android.databinding:compiler:$gradle_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'
    // shared preference
    implementation 'com.lacronicus:easydatastorelib:1.0.4'

    // exoplayer
    implementation "com.google.android.exoplayer:exoplayer:$exoplayer_version"
    // design
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.0-alpha02'
    implementation 'androidx.fragment:fragment:1.1.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'com.android.support:design:29.0.0'
    implementation 'com.google.android:flexbox:1.1.0'

    implementation 'io.grpc:grpc-okhttp:1.25.0'
    implementation 'com.google.cloud:google-cloud-speech:1.22.1'
    // Phone Code Selector
    implementation 'com.hbb20:ccp:2.2.9'
    // otp verification
    /* implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.google.android.gms:play-services-base:17.1.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.3.0'*/

    // phone number
    //   implementation 'com.googlecode.libphonenumber:libphonenumber:8.10.1'
    // otp view
    //  implementation 'com.github.mukeshsolanki:android-otpview-pinview:2.0.0'
    // shared preference
    /* implementation 'com.lacronicus:easydatastorelib:1.0.4'
    // jwt decode
    implementation 'com.auth0.android:jwtdecode:1.3.0'
    // crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.0@aar') {
        transitive = true;
    }*/
    // firebase
    implementation 'com.google.firebase:firebase-core:17.4.3'
    implementation 'com.google.firebase:firebase-messaging:20.2.0'
    implementation 'com.google.firebase:firebase-config:19.1.4'
    implementation 'com.google.firebase:firebase-analytics:17.4.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.1'

    //moengage analytics
    implementation 'com.moengage:moe-android-sdk:9.8.03'



    configurations {
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    configurations {
        compile.exclude group: 'com.google.protobuf', module: 'protobuf-lite'
    }

    configurations.all {
        resolutionStrategy {
            force("com.google.protobuf:protobuf-java:3.11.0-rc-1")
        }
    }

}
